{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","console","table","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04f8fafb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Row = ({ title, fetchUrl,isLargeRow }) => {\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst [trailerUrl , setTrailerUrl] = useState(\"\");\r\n\t// code which runs based on a speific condition\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// if the [] it will runc once .....\r\n\t\tasync function fetchData() {\r\n\t\t\tconst request = await axios.get(fetchUrl);\r\n\t\t\tsetMovies(request.data.results);\r\n\t\t\treturn request;\r\n\t\t\t// console.log(request.data.results);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, [fetchUrl]);\r\n\r\n\r\n\tconst opts = {\r\n\t\theight : \"390\",\r\n\t\twidth: \"100%\",\r\n\t\tplayerVars : {\r\n\t\t\tautoplay : 1,\r\n\t\t}\r\n\t}\r\n\r\n\tconsole.table(movies);\r\n\r\n\r\n\tconst handleClick = (movie) =>{\r\n\t\tif (trailerUrl){\r\n\t\t\tsetTrailerUrl(\"\");\r\n\t\t} else{\r\n\t\t\tmovieTrailer(movie?.name || \"\")\r\n\t\t\t.then((url) => {\r\n\t\t\t\tconst urlParams = new URLSearchParams(new URL(url).search);\r\n\t\t\t\tsetTrailerUrl(urlParams.get(\"v\"));\r\n\t\t\t})\r\n\r\n\t\t\t.catch((error) => console.log(error));\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t<div className=\"row__posters\">\r\n\t\t\t\t{movies.map(movie => (\r\n\t\t\t\t\t<img \r\n\t\t\t\t\tkey={movie.id} \r\n\t\t\t\t\tonClick={() => handleClick(movie)}\r\n\t\t\t\t\tclassName={`row__poster ${isLargeRow && \"row_posterLarge\"}`}\r\n\t\t\t\t\tsrc={`${base_url}${isLargeRow ? movie.poster_path: movie.backdrop_path}`} \r\n\t\t\t\t\talt={movie.name} />\r\n                ))}\r\n\t\t\t</div>\r\n\r\n\t\t{trailerUrl && <Youtube videoId={trailerUrl} opts={opts} /> }\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Row;\r\n","const API_KEY = \"8b6c9dd52afed5897617e77aff7b99de\";\r\n\r\nconst requests = {\r\n    fetchTrending : `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals :`/discover/tv?api_key=${API_KEY}&with_networks=123`,\r\n    fetchTopRated:`./movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\n\r\nconst Banner = () => {\r\n\tconst [movie, setMovie] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\tconst request = await axios.get(requests.fetchNetflixOriginals);\r\n\t\t\tsetMovie(\r\n\t\t\t\trequest.data.results[\r\n\t\t\t\t\tMath.floor(Math.random() * request.data.results.length)\r\n\t\t\t\t]\r\n\t\t\t);\r\n\t\t\treturn request;\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconsole.log(movie);\r\n\tfunction truncate(str, n) {\r\n\t\treturn str?.length > n ? str.substr(0, n - 1) + \" ...\" : str;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header\r\n\t\t\tclassName=\"banner\"\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundSize: \"cover\",\r\n\t\t\t\tbackgroundImage: `url(\r\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n            )`,\r\n\t\t\t\tbackgroundPosition: \"center center\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div className=\"banner__contents\">\r\n\t\t\t\t<h1 className=\"banner__title\">\r\n\t\t\t\t\t{movie?.title || movie?.name || movie?.original_name}\r\n\t\t\t\t</h1>\r\n\r\n\t\t\t\t<div className=\"banner__buttons\">\r\n\t\t\t\t\t<button className=\"banner__button\">Play</button>\r\n\t\t\t\t\t<button className=\"banner__button\">My List</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<h1 className=\"banner__description\">\r\n\t\t\t\t\t{truncate(movie?.overview, 150)}\r\n\t\t\t\t</h1>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"banner--fadeBottom\" />\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n\tconst [show, handleShow] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"scroll\", () => {\r\n\t\t\tif (window.scrollY > 100) {\r\n\t\t\t\thandleShow(true);\r\n\t\t\t} else handleShow(false);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"scroll\");\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className={`nav ${show && \"nav__black\"}`}>\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"nav__logo\"\r\n\t\t\t\tsrc=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1198px-Netflix_2015_logo.svg.png\"\r\n\t\t\t\talt=\"Netflix Logo\"\r\n\t\t\t/>\r\n\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"nav__avatar\"\r\n\t\t\t\tsrc=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n\t\t\t\talt=\"Netflix Logo\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport Navbar from \"./Navbar\";\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"app\">\n\n\t\t\t<Navbar/>\n\t\t\t<Banner/>\n\t\t\t\n\t\t\t<Row title=\"NETFLIX ORIGINALS\" \n\t\t\tfetchUrl={requests.fetchNetflixOriginals} \n\t\t\tisLargeRow />\n\n\t\t\t<Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n\t\t\t<Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n\t\t\t<Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n\t\t\t<Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n\t\t\t<Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n\t\t\t<Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n\t\t\t<Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}